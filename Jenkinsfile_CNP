#!groovy

properties([
        [$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/div-case-orchestration-service.git'],
        pipelineTriggers([[$class: 'GitHubPushTrigger']])
])

@Library("Infrastructure")

def type = "java"
def product = "div"
def component = "cos"

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

def secrets = [
        'div-${env}': [
                secret("ccd-submission-s2s-auth-secret", "AUTH_PROVIDER_CCDSUBMISSION_CLIENT_KEY"),
                secret("div-doc-s2s-auth-secret", "AUTH_PROVIDER_DOCUMENTGENERATOR_CLIENT_KEY"),
                secret("frontend-secret", "SERVICE_AUTH_SECRET"),
                secret("idam-secret", "AUTH2_CLIENT_SECRET"),
                secret("idam-citizen-password", "IDAM_CITIZEN_PASSWORD"),
                secret("idam-caseworker-password", "IDAM_CASEWORKER_PASSWORD")
        ]
]

withPipeline(type, product, component) {
    if (env.CHANGE_TITLE && !env.CHANGE_TITLE.startsWith('[PREVIEW]')) {
        enableDockerBuild()
        installCharts()
        enableDbMigration()
    }

    loadVaultSecrets(secrets)

    after('checkout') {
        echo 'divorce-case-orchestration-service checked out'
    }

    after('test') {
        echo 'Starting WireMock Functional Tests'
        try {
            sh './gradlew wiremockFunctional'
        } finally {
            steps.junit '**/test-results/**/*.xml'
        }
    }

    after('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    // Kubernetes does not retrieve variables from the output terraform
    before('functionalTest:preview') {
        env.FEATURE_RESP_SOLICITOR_DETAILS = 'true'
        env.test_environment = 'aat'
    }

    after('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }
}
